#!/bin/bash
## Copyright 2016 WebMarcIT Ltd
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##    http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
# shellcheck disable=SC2086
# shellcheck disable=SC2140
# shellcheck disable=SC2154
# shellcheck disable=SC2162
# shellcheck disable=SC2155



## These functions record an audit in a standardised way
## fn_LogWhy()
## fn_Audit()

fn_LogWhy()
{
  local file_Job="${1}"                             # The Job to update
  local file_Log="${dir_Log}"/"$(basename "${file_Job}").log"
  printf "\n\n"
  basename "${file_Job}"
  echo ${file_Log}
  printf "\n\n"
  if [[  "${str_JobState}" == "manual" ]] ; then
    read -e -p " Comment (optional): " str_Answer
    if [[ ${str_Answer} == "" ]] ; then
      echo "$(${fn_LogDate}) ${str_User} MANUAL STEP"                              | tee -a "${file_Job}" "${file_Log}" >/dev/null
    else
      echo "$(${fn_LogDate}) ${str_User} MANUAL STEP REASON: ${str_Answer}"  | tee -a "${file_Job}" "${file_Log}" >/dev/null
    fi
  else
    read -e -p " Enter a reason: " str_Answer
    echo "$(${fn_LogDate}) ${str_User} REASON: ${str_Answer}"                      | tee -a "${file_Job}" "${file_Log}" >/dev/null
  fi
}
readonly -f fn_LogWhy

fn_Audit()
{
  local file_Job="${1}"                             # The Job to update
  local str_Transition="${2}"                       # The transition being performed
  local str_Dispatcher="${3:-}"
  local file_Log
  file_Log="${dir_Log}"/"$(basename "${file_Job}").log"

  [[ "del ski res pau" =~ ${str_Transition:0:3} ]] && fn_LogWhy "${file_Job}" # Add skipped / resumed / paused
  if [[ "${str_Dispatcher}" ]] ; then
    echo "$(${fn_LogDate}) ${str_Transition}"                            | tee -a "${file_Job}" "${file_Log}" >/dev/null
  else
    echo "$(${fn_LogDate}) ${str_User} ran transition ${str_Transition}" | tee -a "${file_Job}" "${file_Log}" >/dev/null
  fi
}
readonly -f fn_Audit
